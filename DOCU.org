#+TITLE:     GRAW - Documentation
#+SUBTITLE:  Garmin Race Around the World - Documentation
#+AUTHOR:    Midorino
#+EMAIL:     midorino@protonmail.com
#+DESCRIPTION: Logs, dones, aso
#+LANGUAGE:  en

#+HTML_LINK_HOME: https://midorino.github.io

* Versioning

Based on [[https://zach-gollwitzer.medium.com/git-crash-course-a-simple-workflow-for-small-teams-and-startups-c491919c9f77]].

Other possible inspirations:

- https://medium.com/@patrickporto/4-branching-workflows-for-git-30d0aaee7bf
- https://nvie.com/posts/a-successful-git-branching-model/

** Initial configuration

git config --global user.name "Name"
git config --global user.email "Email"
less ~/.gitconfig

** Every day

Create a new log file "log/YYYY-MM-DD.org".

** New feature

git branch feat-abc
git branch --list
git checkout feat-abc

with "abc" the feature ID (cf. logs and documentation).

Add feature section to log file:

[X.Y.Z] [feat-abc] Change distance unit from step to meter

Add feature publication to CHANGELOG:

[X.Y.Z] - 2020-12-24

Feature ID is not published for it is an intern process element only.

* Maintenance Page

Page generated via "Better Error Pages" free service (provided by [[https://www.statuspage.io/][Statuspage]]) but without all scripts.

But still too much bloated IMHO.

* Publication

As it is intended to be shared / viewed by the challenge participants, production code is published as static webpage (HTML/CSS/JS) only via GitHub Pages service.

In order to do so, from the GitHub repository settings, section "Options / GitHub Pages, simply put the source on branch "main" and folder "/ (root)".

Consequence: to test production code, "develop" branch must be merged into "main" branch" beforhand.
